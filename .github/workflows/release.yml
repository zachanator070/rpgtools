name: Publish Release

on:
  push:
    branches:
      - 'main'
  workflow_dispatch:

jobs:

  release:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - uses: actions/checkout@v3
    - name: Install jq
      run: sudo apt-get install -y jq
    - name: version
      run: echo version=`jq -r .version package.json` >> $GITHUB_OUTPUT
      id: version
    - name: release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: false
        prerelease: false
        release_name: ${{ steps.version.outputs.version }}
        tag_name: ${{ steps.version.outputs.version }}
        body_path: CHANGELOG.md
      env:
        GITHUB_TOKEN: ${{ github.token }}

  docker-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 16.14.0
      - uses: actions/checkout@v3
      - name: build
        run: make build
      - name: Publish Docker Image
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: make publish

  electron-linux:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 16.14.0
      - uses: actions/checkout@v3
      - name: build artifacts
        run: make electron
      - name: upload deb artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./packages/server/out/make/deb/x64/rpgtools-server_${{ needs.release.outputs.version }}_amd64.deb
          asset_name: rpgtools-server_${{ needs.release.outputs.version }}_amd64.deb
          asset_content_type: application/deb
      - name: upload rpm artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./packages/server/out/make/rpm/x64/rpgtools-server-${{ needs.release.outputs.version }}-1.x86_64.rpm
          asset_name: rpgtools-server-${{ needs.release.outputs.version }}-1.x86_64.rpm
          asset_content_type: application/rpm

  electron-windows:
    runs-on: windows-latest
    needs: release
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 16.14.0
      - uses: actions/checkout@v3
      - name: build artifacts
        run: make electron
      - name: list artifacts
        run: ls packages\server\out\make\squirrel.windows\x64
        continue-on-error: true
      - name: upload setup artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: '.\packages\server\out\make\squirrel.windows\x64\@rpgtools-server-${{ needs.release.outputs.version }} Setup.exe'
          asset_name: rpgtools-server-${{ needs.release.outputs.version }}-Setup.exe
          asset_content_type: application/exe

  electron-macos:
    runs-on: macos-latest
    needs: release
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 16.14.0
      - uses: actions/checkout@v3
      - name: build artifacts
        run: make electron
      - name: list artifacts
        run: ls -R packages/server/out/make
        continue-on-error: true
      - name: upload dmg artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./packages/server/out/make/@rpgtools-server-${{ needs.release.outputs.version }}-x64.dmg
          asset_name: rpgtools-server-${{ needs.release.outputs.version }}-x64.dmg
          asset_content_type: application/dmg
