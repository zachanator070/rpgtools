// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`wiki page mutations with world create wiki no permission 1`] = `
{
  "data": null,
  "errors": ArrayContaining [
    Any<Object>,
  ],
  "extensions": undefined,
  "http": {
    "headers": Headers {
      Symbol(map): {},
    },
  },
}
`;

exports[`wiki page mutations with world delete wiki no permission 1`] = `
{
  "data": null,
  "errors": ArrayContaining [
    Any<Object>,
  ],
  "extensions": undefined,
  "http": {
    "headers": Headers {
      Symbol(map): {},
    },
  },
}
`;

exports[`wiki page mutations with world update cover image no permission 1`] = `
{
  "data": null,
  "errors": ArrayContaining [
    Any<Object>,
  ],
  "extensions": undefined,
  "http": {
    "headers": Headers {
      Symbol(map): {},
    },
  },
}
`;

exports[`wiki page mutations with world update place no permission 1`] = `
{
  "data": null,
  "errors": ArrayContaining [
    Any<Object>,
  ],
  "extensions": undefined,
  "http": {
    "headers": Headers {
      Symbol(map): {},
    },
  },
}
`;

exports[`wiki page mutations with world update wiki no permission 1`] = `
{
  "data": null,
  "errors": ArrayContaining [
    Any<Object>,
  ],
  "extensions": undefined,
  "http": {
    "headers": Headers {
      Symbol(map): {},
    },
  },
}
`;

exports[`wiki page mutations with world with authenticated user create wiki 1`] = `
{
  "data": {
    "createWiki": {
      "_id": Any<String>,
      "accessControlList": [],
      "canAdmin": true,
      "canWrite": true,
      "children": ArrayContaining [
        ObjectContaining {
          "_id": Any<String>,
        },
      ],
      "name": Any<String>,
    },
  },
  "errors": undefined,
  "extensions": undefined,
  "http": {
    "headers": Headers {
      Symbol(map): {},
    },
  },
}
`;

exports[`wiki page mutations with world with authenticated user delete wiki 1`] = `
{
  "data": {
    "deleteWiki": {
      "_id": Any<String>,
    },
  },
  "errors": undefined,
  "extensions": undefined,
  "http": {
    "headers": Headers {
      Symbol(map): {},
    },
  },
}
`;

exports[`wiki page mutations with world with authenticated user delete wiki root wiki 1`] = `
{
  "data": null,
  "errors": [
    [GraphQLError: You cannot delete the main page of a world],
  ],
  "extensions": undefined,
  "http": {
    "headers": Headers {
      Symbol(map): {},
    },
  },
}
`;

exports[`wiki page mutations with world with authenticated user update type 1`] = `
{
  "data": {
    "updateWiki": {
      "_id": Any<String>,
      "canAdmin": true,
      "canWrite": true,
      "content": null,
      "coverImage": null,
      "folder": {
        "_id": Any<String>,
      },
      "mapImage": null,
      "name": "other page",
      "pixelsPerFoot": null,
      "type": "Place",
      "world": {
        "_id": Any<String>,
      },
    },
  },
  "errors": undefined,
  "extensions": undefined,
  "http": {
    "headers": Headers {
      Symbol(map): {},
    },
  },
}
`;

exports[`wiki page mutations with world with authenticated user update wiki just content 1`] = `
{
  "data": {
    "updateWiki": {
      "_id": Any<String>,
      "canAdmin": true,
      "canWrite": true,
      "content": Any<String>,
      "coverImage": null,
      "folder": {
        "_id": Any<String>,
      },
      "mapImage": null,
      "name": "Earth",
      "pixelsPerFoot": 0,
      "type": "Place",
      "world": {
        "_id": Any<String>,
      },
    },
  },
  "errors": undefined,
  "extensions": undefined,
  "http": {
    "headers": Headers {
      Symbol(map): {},
    },
  },
}
`;

exports[`wiki page mutations with world with authenticated user update wiki just name 1`] = `
{
  "data": {
    "updateWiki": {
      "_id": Any<String>,
      "canAdmin": true,
      "canWrite": true,
      "content": null,
      "coverImage": null,
      "folder": {
        "_id": Any<String>,
      },
      "mapImage": null,
      "name": "new name",
      "pixelsPerFoot": 0,
      "type": "Place",
      "world": {
        "_id": Any<String>,
      },
    },
  },
  "errors": undefined,
  "extensions": undefined,
  "http": {
    "headers": Headers {
      Symbol(map): {},
    },
  },
}
`;

exports[`wiki page mutations with world with authenticated user with image update cover image 1`] = `
{
  "data": {
    "updateWiki": {
      "_id": Any<String>,
      "canAdmin": true,
      "canWrite": true,
      "content": null,
      "coverImage": {
        "_id": Any<String>,
        "chunks": ArrayContaining [
          ObjectContaining {
            "_id": Any<String>,
            "fileId": Any<String>,
          },
        ],
        "height": 830,
        "icon": {
          "_id": Any<String>,
          "chunks": ArrayContaining [
            ObjectContaining {
              "_id": Any<String>,
              "fileId": Any<String>,
            },
          ],
        },
        "name": "tests/integration/resolvers/mutations/testmap.png",
        "width": 1000,
      },
      "folder": {
        "_id": Any<String>,
      },
      "mapImage": null,
      "name": "Earth",
      "pixelsPerFoot": 0,
      "type": "Place",
      "world": {
        "_id": Any<String>,
      },
    },
  },
  "errors": undefined,
  "extensions": undefined,
  "http": {
    "headers": Headers {
      Symbol(map): {},
    },
  },
}
`;

exports[`wiki page mutations with world with authenticated user with image update place 1`] = `
{
  "data": {
    "updatePlace": {
      "_id": Any<String>,
      "mapImage": {
        "_id": Any<String>,
        "chunks": ArrayContaining [
          ObjectContaining {
            "_id": Any<String>,
            "fileId": Any<String>,
          },
        ],
        "height": 830,
        "icon": {
          "_id": Any<String>,
          "chunks": ArrayContaining [
            ObjectContaining {
              "_id": Any<String>,
              "fileId": Any<String>,
            },
          ],
        },
        "name": "tests/integration/resolvers/mutations/testmap.png",
        "width": 1000,
      },
      "pixelsPerFoot": null,
    },
  },
  "errors": undefined,
  "extensions": undefined,
  "http": {
    "headers": Headers {
      Symbol(map): {},
    },
  },
}
`;
