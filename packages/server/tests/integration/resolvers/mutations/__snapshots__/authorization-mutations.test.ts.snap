// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`authorization-mutations with tester logged in and world created addUserRole 1`] = `
{
  "data": {
    "addUserRole": {
      "_id": Any<String>,
      "accessControlList": ArrayContaining [
        ObjectContaining {
          "permission": Any<String>,
          "principal": ObjectContaining {
            "_id": Any<String>,
            "name": Any<String>,
          },
          "principalType": Any<String>,
        },
      ],
      "canAdmin": true,
      "canWrite": true,
      "members": ArrayContaining [
        ObjectContaining {
          "_id": Any<String>,
        },
      ],
      "name": "other role",
      "world": {
        "_id": Any<String>,
      },
    },
  },
  "errors": undefined,
  "extensions": undefined,
  "http": {
    "headers": Headers {
      Symbol(map): {},
    },
  },
}
`;

exports[`authorization-mutations with tester logged in and world created addUserRole permission denied 1`] = `
{
  "data": null,
  "errors": [
    [GraphQLError: You do not have permission to manage this role],
  ],
  "extensions": undefined,
  "http": {
    "headers": Headers {
      Symbol(map): {},
    },
  },
}
`;

exports[`authorization-mutations with tester logged in and world created createRole 1`] = `
{
  "data": {
    "createRole": {
      "_id": Any<String>,
      "accessControlList": ArrayContaining [
        ObjectContaining {
          "permission": Any<String>,
          "principal": ObjectContaining {
            "_id": Any<String>,
            "name": Any<String>,
          },
          "principalType": Any<String>,
        },
      ],
      "canAdmin": true,
      "canWrite": true,
      "members": Any<Array>,
      "name": "new role",
      "world": {
        "_id": Any<String>,
      },
    },
  },
  "errors": undefined,
  "extensions": undefined,
  "http": {
    "headers": Headers {
      Symbol(map): {},
    },
  },
}
`;

exports[`authorization-mutations with tester logged in and world created createRole permission denied 1`] = `
{
  "data": null,
  "errors": [
    [GraphQLError: You do not have permission to add roles to this world],
  ],
  "extensions": undefined,
  "http": {
    "headers": Headers {
      Symbol(map): {},
    },
  },
}
`;

exports[`authorization-mutations with tester logged in and world created deleteRole 1`] = `
{
  "data": {
    "deleteRole": {
      "_id": Any<String>,
    },
  },
  "errors": undefined,
  "extensions": undefined,
  "http": {
    "headers": Headers {
      Symbol(map): {},
    },
  },
}
`;

exports[`authorization-mutations with tester logged in and world created deleteRole permission denied 1`] = `
{
  "data": null,
  "errors": [
    [GraphQLError: You do not have write permissions for this role],
  ],
  "extensions": undefined,
  "http": {
    "headers": Headers {
      Symbol(map): {},
    },
  },
}
`;

exports[`authorization-mutations with tester logged in and world created grantRolePermission 1`] = `
{
  "data": {
    "grantRolePermission": {
      "_id": Any<String>,
    },
  },
  "errors": undefined,
  "extensions": undefined,
  "http": {
    "headers": Headers {
      Symbol(map): {},
    },
  },
}
`;

exports[`authorization-mutations with tester logged in and world created grantRolePermission permission denied 1`] = `
{
  "data": null,
  "errors": [
    [GraphQLError: You do not have permission to assign the permission "Read access to a single wiki page" for this subject],
  ],
  "extensions": undefined,
  "http": {
    "headers": Headers {
      Symbol(map): {},
    },
  },
}
`;

exports[`authorization-mutations with tester logged in and world created grantUserPermission 1`] = `
{
  "data": {
    "grantUserPermission": ObjectContaining {
      "_id": Any<String>,
      "accessControlList": ArrayContaining [
        ObjectContaining {
          "permission": Any<String>,
          "principal": ObjectContaining {
            "_id": Any<String>,
            "name": Any<String>,
          },
          "principalType": Any<String>,
        },
      ],
    },
  },
  "errors": undefined,
  "extensions": undefined,
  "http": {
    "headers": Headers {
      Symbol(map): {},
    },
  },
}
`;

exports[`authorization-mutations with tester logged in and world created grantUserPermission permission denied 1`] = `
{
  "data": null,
  "errors": [
    [GraphQLError: You do not have permission to assign the permission "See this world in search results" for this subject],
  ],
  "extensions": undefined,
  "http": {
    "headers": Headers {
      Symbol(map): {},
    },
  },
}
`;

exports[`authorization-mutations with tester logged in and world created removeUserRole 1`] = `
{
  "data": {
    "removeUserRole": {
      "_id": Any<String>,
      "accessControlList": ArrayContaining [
        ObjectContaining {
          "permission": Any<String>,
          "principal": ObjectContaining {
            "_id": Any<String>,
            "name": Any<String>,
          },
          "principalType": Any<String>,
        },
      ],
      "canAdmin": true,
      "canWrite": true,
      "members": Any<Array>,
      "name": "other role",
      "world": {
        "_id": Any<String>,
      },
    },
  },
  "errors": undefined,
  "extensions": undefined,
  "http": {
    "headers": Headers {
      Symbol(map): {},
    },
  },
}
`;

exports[`authorization-mutations with tester logged in and world created removeUserRole permission denied 1`] = `
{
  "data": null,
  "errors": [
    [GraphQLError: You do not have permission to manage this role],
  ],
  "extensions": undefined,
  "http": {
    "headers": Headers {
      Symbol(map): {},
    },
  },
}
`;

exports[`authorization-mutations with tester logged in and world created revokeRolePermission 1`] = `
{
  "data": {
    "revokeRolePermission": {
      "_id": Any<String>,
    },
  },
  "errors": undefined,
  "extensions": undefined,
  "http": {
    "headers": Headers {
      Symbol(map): {},
    },
  },
}
`;

exports[`authorization-mutations with tester logged in and world created revokeRolePermission permission denied 1`] = `
{
  "data": null,
  "errors": [
    [GraphQLError: You do not have permission to revoke the permission "Read access to a single wiki page"],
  ],
  "extensions": undefined,
  "http": {
    "headers": Headers {
      Symbol(map): {},
    },
  },
}
`;

exports[`authorization-mutations with tester logged in and world created revokeUserPermission 1`] = `
{
  "data": {
    "revokeUserPermission": {
      "_id": Any<String>,
      "accessControlList": [],
      "canAdmin": true,
      "canWrite": true,
    },
  },
  "errors": undefined,
  "extensions": undefined,
  "http": {
    "headers": Headers {
      Symbol(map): {},
    },
  },
}
`;

exports[`authorization-mutations with tester logged in and world created revokeUserPermission permission denied 1`] = `
{
  "data": null,
  "errors": [
    [GraphQLError: You do not have permission to revoke the permission "See this world in search results"],
  ],
  "extensions": undefined,
  "http": {
    "headers": Headers {
      Symbol(map): {},
    },
  },
}
`;
